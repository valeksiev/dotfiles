Application.controller 'UploadCtrl', 
['$scope', '$rootScope', '$upload', '$compile', '$location', 'Account', 'RailsApi', 
($scope, $rootScope, $upload, $compile, $location, Account, RailsApi) ->

  $scope.csv_fields = []
  $scope.accounts = []
  $scope.groups = []
  $scope.password = handler: '', value: 'csv'

  #
  # Everything is ready to start
  #
  $rootScope.$watch 'rails_synced', (sync) ->
    if sync
      $scope.initialize()

  $scope.initialize = () ->
    #
    # Fetch and select the first group
    #
    $scope.account = $rootScope.current_account
    $scope.groups = $scope.account.groups
    $scope.setGroup($scope.groups[0].id, $scope.groups[0].label)

  #
  # Adds the extra field if password handler is specify by teacher
  #
  $scope.pwdHandler = ($event) ->
    if $scope.password.handler == 'specify'
      $($event.target).parent().append(
          $compile('<div id="password_value" ><input type="text" name="password" ng-model="password.value" /></div>')($scope)
      ) if $('#password_value').length == 0 #check if element does not exist
    else
      $('#password_value').remove()

  $scope.setGroup = (group_code, label) ->
      $scope.btn_group = label
      $scope.group_code = group_code

  #
  # Upload the file and create the accounts
  #
  $scope.onFileSelect = (event) ->
    files = $upload.extractFiles($(event.target).closest('form'))
    $scope.file_error = 'Please select file!' if _.isEmpty(files)
    for name, file of files
      $upload.upload(
        url: '/upload',
        file: file,
        data:
          code: $scope.group_code
          password_handler: $scope.password.handler
          password_value: $scope.password.value
      ).then((response) ->
        if _.has(response.data, 'errors')
          $scope.displayFormErrors(response.data.errors)
        else
          $scope.accounts_template = 'accounts.html'
          $('#password_handler').css('display', 'none')
          $scope.accounts = response.data
      )

  $scope.displayFormErrors = (errors) ->
    for key, error of errors
      if key == 'file' and error[0] == 'invalid_headers'
        $scope.invalid_headers_temaplate = 'invalid_headers.html'
        $('#password_handler').css('display', 'none')

  $scope.$watch 'accounts', (new_data, old_data) ->
    $scope.accounts = new_data
  #
  # Select all and unselect all :)
  #
  $scope.$watch 'selectToggle', (new_data, old_data) ->
    $(".student-item input[type='checkbox']").prop('checked', new_data)

  $scope.submitAccount = (index) ->
    account = $scope.accounts.fail[index] 
    Account.validate(account, (response) ->
      if _.isEmpty(response.errors)
        delete account['errors']
        $scope.accounts.success.push(account)
        $scope.accounts.fail.splice(index, 1)
      else
        $scope.accounts.fail[index].errors = response.errors
    )

  $scope.createAccounts = () ->
    for account in $scope.accounts.success
      account.code = $scope.group_code
      Account.create(account, (response) ->
        if !_.isEmpty(response.errors)
          account.errors = response.errors
          $scope.accounts.fail.push account
      )
#    if _.isEmpty($scope.accounts.fail)
#      $location.path('/people/manage')
]
