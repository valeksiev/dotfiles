class School

  include Mongoid::Document
  include Mongoid::Timestamps::Short
#  include Mongoid::Paranoia
#  include Mongoid::Versioning
  include Mongoid::Token

#  max_versions 5
  TYPES = %w( primary secondary college university )


  field :name,          type: String, default: ''
  field :contact_phone, type: String, default: '' #, default: '000-000-000-000'
  field :chain,         type: String, default: ''
  field :type,          type: String, default: ''
  field :about,         type: String, default: ''
  field :logo,          type: String, default: ''
  field :location,      type: Hash,   default: {
    :address => '',
    :city => '',
    :state => '',
    :zip => ''
  }
  field :it_cordinator, type: Hash, default: {
    :first_name => '',
    :last_name => '',
    :email => '',
    :country_code => '',
    :phone_number => '',
  }

  token :field_name => :code, :length => 6
  
  # Relations
  #
  belongs_to :owner, class_name: 'Account', inverse_of: :school
  has_one  :default_group, class_name: 'Group', inverse_of: :default_of
  has_one :moodle_config, class_name: 'MoodleConfig', inverse_of: :school
  has_many :accounts, class_name: 'Account'
  has_many :properties, class_name: 'Property'
  has_many :groups, class_name: 'Group'
  has_many :csv_uploads, class_name: 'CsvUpload', inverse_of: :school
  has_many :applications, class_name: 'Client', inverse_of: :schools

  # Validation
  #
  validates :name, presence: true, on: :create
  validates :type, presence: true, on: :create


  after_create lambda { self.create_default_group(:label => "#{self.name} students") }

  def self.find_by_id(id = nil, options = {})
    where(:id => id).only(options[:fields]).first
  end
end
