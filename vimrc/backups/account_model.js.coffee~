Application.factory 'Account', ['$rootScope', 'Api', 'RailsApi', ($rootScope, Api, RailsApi) ->

  Model = {}

  Model.id = () ->
    $rootScope.current_account.id if _.has($rootScope.current_account, 'id')

  Model.is_teacher = () ->
    _.has($rootScope.current_account, 'type') and $rootScope.current_account.type is 'teacher'

  Model.is_student = () ->
    _.has($rootScope.current_account, 'type') and $rootScope.current_account.type is 'student'

  Model.is_developer = () ->
    _.has($rootScope.current_account, 'type') and $rootScope.current_account.type is 'developer'


  Model.type = () ->
    if _.has($rootScope.current_account, 'type')
      return $rootScope.current_account.type

  # GET / FIND / SET

  Model.get_groups = (id, callback) ->
    Api.get("/accounts/#{id}/groups", {}, (response) ->
      if _.has(response, 'data')
        return callback(response.data.groups)
      return []
    )

  Model.get_account = (id, callback) ->
    Api.get("/accounts/#{id}", {}, (response) ->
      if _.has(response, 'data')
        return callback(response.data.account)
      return []
    )

  Model.get_by_activation_token = (token, callback) ->
    RailsApi.get("/activate/#{token}", {}, (response) ->
        callback(response)
    )

  Model.validate = (account, callback) ->
    Api.post('/accounts/valid', {}, account, (response) ->
      return callback(response)
    )

  Model.create = (account, callback) ->
    delete account['$$hashKey']
    delete account['errors']
    delete account['_id']
    RailsApi.post(
      '/accounts',
      {},
      { account: account },
      (response) ->
        return callback(response)
    )

  Model.activate = (account, callback) ->
    RailsApi.put(
      "/activate/#{account.activation_token}",
      {},
      { account: account },
      (response) ->
        callback(response)
    )




  return Model
]
