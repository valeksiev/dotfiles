require "net/http"
require "uri"

class AccountsController < ApplicationController

  before_filter :check_current_user, :except => [:sign_in, :sign_up, :sign_up_confirmation, :activate, :get_current_account, :get_current_school]
  before_filter lambda { redirect_to index_path unless current_user.nil? }, :only => [:sign_in, :sign_up]

  #
  # Accounts Controller have custom layout
  #
  layout 'login', :only => [:sign_up, :sign_in, :activate, :sign_up_confirmation]

  private

  def account_params
    params[:account].permit(:email , :type , :username , :password ) if params[:account]
  end

  public 

  def create
    @account = Account.new(params.require(:account).permit!)
   ap @account.as_json 
    respond_to do |format|
#      format.all { render :json => @account.save ? @account.as_json(:root => false) : { errors: @account.errors } }
      format.all {render :json => { errors: {} }}
    end
  end

  def sign_up
    @account = Account.new(account_params)
    saved = @account.save if request.post? 
    respond_to do |f|
      f.json {
        render :json => 
        if saved 
          { :data => @account, :redirect_to => "#/thank-you/#{@account.activation_token}" } 
        else
          { :error => @account.errors}
        end
      }
      f.html { redirect_to "#{sign_up_confirmation_path}/#{saved.activation_token}" if saved }
    end
  end

  def get_current_user
    respond_to do |format|
      format.all {
        render :json => {
          :current_user => current_user.as_json(:root => false, :include => :groups)
        }
      }
    end
  end

  def sign_in
    @account = Account.new account_params
    if request.post?
      if authenticated = @account.authenticate
        authenticated
        set_current_user(authenticated)
        res = {
          account: authenticated,
        }
      else
        res = { errors: @account.errors.to_a }
      end
    end
    respond_to do |f|
      f.json { render :json => res || {} }
      f.html { set_in_session(authenticated) if authenticated }
    end
  end

  def sign_out
    current_user.tokens.destroy_all
    set_current_user(nil)
    respond_to do |f|
      f.json { render :json => { :status => true } }
      f.html { redirect_to root_path }
    end
  end

  def sign_up_confirmation

  end

  def activate
    @account = Account.where(:activation_token => params.require(:token)).first
    return redirect_to sign_up_path if @account.nil?
    activated = @account.activate(params.require(:account).permit!) if request.method == 'PUT'
    @account.authenticate 
    respond_to do |format|
      format.all do
        render :json => { account: @account.as_json(:root => false), status: 'success' }
      end
    end
  end

  private

  def set_in_session
    set_current_user(@account)
    redirect_to index_path
  end

end
