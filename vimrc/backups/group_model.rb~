class Group

  include Mongoid::Document
  include Mongoid::Timestamps::Short
#  include Mongoid::Paranoia
#  include Mongoid::Versioning
  include Mongoid::Token
  
  belongs_to :teacher,    class_name: 'Account', inverse_of: :groups
  has_and_belongs_to_many   :students,   class_name: 'Account', inverse_of: :in_group
  belongs_to :school,     class_name: 'School', inverse_of: :groups
  belongs_to :default_of,     class_name: 'School', inverse_of: :default_group

  has_many :properties, class_name: 'Property'
  has_many :applications, class_name: 'Client'

  field :label, type: String, default: 'My students'

  token :field_name => :code, :length => 6

  def remove_student student_id
    return false if is_default?
    student = Account.find_by_id(student_id)
    if student
      return self.students.delete(student)
    end
    false
  end

  def is_default?
    !self.default_of
  end

  def self.find_by_id(id = nil, options = {})
    where(:id => id).only(options[:fields]).first
  end
end
